# -*- coding: utf-8 -*-
"""Tic tac

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ddse6JqAJcQcdnSCtQ8rfNb8OrBceFXl

Tic tac toe
"""

#positions 
a1=a2=a3=b1=b2=b3=c1=c2=c3='#'

win_lose=None
#player1 play feeds
def player1():
   global a1,a2,a3,b1,b2,b3,c1,c2,c3
   if x=="a1":
     a1='X'
   elif x=='a2':       
     a2='X'
   elif x=='a3':
     a3='X'
   elif x=='b1':
     b1='X'
   elif x=='b2':
     b2='X'
   elif x=='b3':
     b3='X'
   elif x=='c1':
     c1='X'
   elif x=='c2':
     c2='X'
   elif x=='c3':
     c3='X'
   else:
     print("wrong input so you lose your chance")
   print()
#player2 control feeds
def player2():
   global a1,a2,a3,b1,b2,b3,c1,c2,c3
   if o=="a1":
     a1='O'
   elif o=='a2':       
     a2='O'
   elif o=='a3':
     a3='O'
   elif o=='b1':
     b1='O'
   elif o=='b2':
     b2='O'
   elif o=='b3':
     b3='O'
   elif o=='c1':
     c1='O'
   elif o=='c2':
     c2='O'
   elif o=='c3':
     c3='O'
   else:
     print("wrong input so you lose your chnace")
   
   print()

   
  # conditions for winning the game(a)
def game_win():
    global win_lose
    #checking if player1 wins by looking all the possibilities of winning(k)
    if (a1=='X' and a2=='X' and a3=='X')  or (c1=='X' and c2=='X' and c3=='X') or (a1=='X' and b1=='X' and c1=='X') or (a2=='X' and b2=='X' and c2=='X') or (a3=='X' and c3=='X' and b3=='X') or (a1=='X' and b2=='X' and c3=='X') or (a3=='X' and b2=='X' and c1=='X'):
        print("palyer 1 won")
        win_lose='1win'
        print()
        return win_lose
    elif (a1=='O' and a2=='O' and a3=='O') or (b1=='O' and b2=='O' and b3=='O') or (c1=='O' and c2=='O' and c3=='O') or (a1=='O' and b1=='O' and c1=='O') or (a2=='O' and b2=='O' and c2=='O') or (a3=='O' and c3=='O' and b3=='O') or (a1=='O' and b2=='O' and c3=='O') or (a3=='O' and b2=='O' and c1=='O'):
        print ("player 2 won")
        win_lose='2win'
        print()
        return win_lose


#printing the graphics
def graphics():
    print('   a   b   c')
    print('1 ',a1,'|',b1,'|',c1)
    print('  -------------')
    print('2 ',a2,'|',b2,'|',c2)
    print('  -------------')
    print('3 ',a3,'|',b3,'|',c3)
    print()


#instructions for the players
print("player 1 gets X and player 2 gets O")
graphics()
print('moves you get are  ')
print('a1, b1 , c1')
print('a2 , b2, c2')
print('a3 , b3 , c3')
tru=True

while tru:
  dupe_avoid=[]
  ct=0
  while ct<6: #max no: of rounds the can go is 5
    
    if a1=='#' or a2=='#' or a3=='#' or b1=='#' or b2=='#' or b3=='#' or  c1=='#' or  c2=='#' or  c2=='#': #to stop when all boxes are filled(s)
      x=input('enter player 1 move:')
      if x in dupe_avoid:                   #avoiding duplication but can be ovridden bcz its just reminder 
          print("already entered box")
          print("used boxes are",dupe_avoid)
          x=input("enter an unused one:")
          if x in dupe_avoid:                #  2nd step avoiding duplication but can be ovridden bcz its just reminder (h)
            print("already entered box")
            print("used boxes are",dupe_avoid)
            x=input("enter an unused one:")
      dupe_avoid.append(x)
      print()
      player1()
      graphics()
      game_win()
    else:
        print("game is draw")
        break
    if win_lose=='1win' or win_lose=='2win':
        print("thanks for playing")
        break
    if a1=='#' or a2=='#' or a3=='#' or b1=='#' or b2=='#' or b3=='#' or  c1=='#' or  c2=='#' or  c2=='#':   #to stop when all boxes are filled(a)
      o=input('enter player 2 move:')
      if o in dupe_avoid:                    #avoiding duplication but can be ovridden bcz its just reminder 
          print("already entered box")
          print("used boxes are ",dupe_avoid)
          o=input("enter an unused one:")
          if o in dupe_avoid:                #  2nd step avoiding duplication but can be ovridden bcz its just reminder(y)
            print("already entered box")
            print("used boxes are",dupe_avoid)
            o=input("enter an unused one:")
      dupe_avoid.append(o)
      print()
      player2()
      graphics()
      game_win()
    else:
        print("game is draw")
        break


    if win_lose=='1win' or win_lose=='2win':
        print("thanks for playing")
        break
    ct+=1
    
  tru=input("want to continue y/n")
  if tru=='y'or tru=='Y' :
      tru=True
      a1=a2=a3=b1=b2=b3=c1=c2=c3='#'       #clearing the old game datas for new game
      win_lose=None
      graphics()    
  else:
      tru=False
      print("thanks for playing")
      exit